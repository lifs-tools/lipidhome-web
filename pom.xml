<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>uk.ac.ebi.lipidhome</groupId>
    <artifactId>LipidHome</artifactId>
    <version>1.0.7-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Lipid Home</name>

    <!-- NOTE: You need to use a profile for set the properties of the database (go to beans.spring.xml to see more) -->

    <repositories>
        <repository>
            <id>ebi-repo-snapshots</id>
            <name>EBI maven snapshots repository</name>
            <url>https://www.ebi.ac.uk/~maven/m2repo_snapshots</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>interval:10080</updatePolicy> <!-- weekly -->
            </snapshots>
        </repository>

        <repository>
            <id>ebi-snapshot-repo</id>
            <name>The EBI internal snapshot repository</name>
            <url>https://www.ebi.ac.uk/~maven/m2repo_snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <jetty.port>9090</jetty.port>
        <!-- <jetty.contextPath>cxf-demo</jetty.contextPath> -->
        <jetty.contextPath></jetty.contextPath>

        <cxf.version>2.4.10</cxf.version>
        <!-- these should be overriden by a custom profile in settings.xml -->
        <database.url>jdbc:mysql://localhost:3306/lipidhome</database.url>
        <database.user>lipidhome</database.user>
        <database.password>lipidhome</database.password>
        <docker.base.image>tomcat:8</docker.base.image>
        <docker.service.prefix>lipidhome</docker.service.prefix>
        <docker.image.prefix>do1-aps-feris.isas.de:5000/lifs/</docker.image.prefix>
        <skip.docker>true</skip.docker>
    </properties>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <!--compiler-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.26</version>
                <configuration>
                    <connectors>
                        <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                            <port>9595</port>
                        </connector>
                    </connectors>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopKey/>
                    <stopPort/>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>2.5.2</version>
                    <configuration>
                        <from>
                            <image>${docker.base.image}</image>
                        </from>
                        <to>
                            <image>${docker.image.prefix}${docker.service.prefix}-tomcat</image>
                            <tags>
                                <tag>${project.version}</tag>
                                <!--<tag>${project.version}${deploy.env}</tag>--> 
                            </tags>
                        </to>
                        <container>
                            <jvmFlags>
                                <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
                            </jvmFlags>
                            <ports>
                                <port>8080</port>
                            </ports>
                            <volumes>
                                <volume>/tmp</volume>
                            </volumes>
                            <!--<user>1000:1000</user>-->
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                            <appRoot>/usr/local/tomcat/webapps/lipidhome</appRoot>
                        </container>
                        <allowInsecureRegistries>false</allowInsecureRegistries>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <!-- JAX-RS -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-bundle-jaxrs</artifactId>
            <version>${cxf.version}</version>
            <!-- Exclude Jetty if running in an other servlet container -->
            <!--<exclusions>-->
            <!--<exclusion>-->
            <!--<groupId>org.eclipse.jetty</groupId>-->
            <!--<artifactId>jetty-server</artifactId>-->
            <!--</exclusion>-->
            <!--</exclusions>-->
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>1.7.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>2.0.6</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.3</version>
        </dependency>


        <!-- LIPIDHOME Server-side based stuff -->
        <dependency>
            <groupId>uk.ac.ebi.lipidhome</groupId>
            <artifactId>fast-lipid</artifactId>
            <version>1.8-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.21</version>
        </dependency>
        <dependency>
            <groupId>net.sf.jni-inchi</groupId>
            <artifactId>jni-inchi</artifactId>
            <version>0.8</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.6</version>
        </dependency>
    </dependencies>

    <description>Lipid data repository accession</description>
    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
